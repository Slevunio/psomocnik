# this configuration needs to correspond to the Vue.js frontends' vue.config.js devServer.proxy.target configuration!
# otherwise you may experience errors like: Proxy error: Could not proxy request /api/hello from localhost:8080 to http://localhost:8088... (ECONNREFUSED).
server.port=8080
# database init, supports mysql too
database=hsqldb
spring.datasource.schema=classpath*:db/${database}/schema.sql
spring.datasource.data=classpath*:db/${database}/data.sql
#spring.datasource.url=jdbc:postgresql://google/petclinic?cloudSqlInstance=psomocnik:us-central1:instance&socketFactory=com.google.cloud.sql.postgres.SocketFactory
#spring.datasource.username=postgres
#spring.datasource.password=postgres


# JPA
spring.jpa.hibernate.ddl-auto=none
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
# Internationalization
spring.messages.basename=messages/messages

# Actuator / Management
management.endpoints.web.base-path=/manage
management.endpoints.web.exposure.include=*
management.contextPath=/_ah

# Logging
logging.level.org.springframework=INFO
# logging.level.org.springframework.web=DEBUG
# logging.level.org.springframework.context.annotation=TRACE

# Maximum time static resources should be cached
spring.resources.cache.cachecontrol.max-age=12h
#spring.profiles.active=hsqldb
