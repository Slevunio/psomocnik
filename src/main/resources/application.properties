# this configuration needs to correspond to the Vue.js frontends' vue.config.js devServer.proxy.target configuration!
# otherwise you may experience errors like: Proxy error: Could not proxy request /api/hello from localhost:8080 to http://localhost:8088... (ECONNREFUSED).

server.port=8088
# hsqldb/postgresql
database=hsqldb
spring.datasource.schema=classpath*:db/${database}/schema.sql
spring.datasource.data=classpath*:db/${database}/data.sql

# postgresql gcloud database init
#spring.datasource.username=postgres
#spring.datasource.password=postgres
#spring.cloud.gcp.sql.database-name=petclinic
# This value is formatted in the form: [gcp project id]:[region]:[instance-name]
#spring.cloud.gcp.sql.instance-connection-name=psomocnik:us-central1:instance
# So app starts despite "table already exists" errors.
#spring.datasource.continue-on-error=true
# Enforces database initialization
#spring.datasource.initialization-mode=always
#spring.cloud.gcp.project-id=psomocnik


# JPA
spring.jpa.hibernate.ddl-auto=none
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true

# Actuator / Management
#management.endpoints.web.base-path=/manage
#management.endpoints.web.exposure.include=*
#management.contextPath=/_ah

# Logging
#logging.level.org.springframework=INFO
# logging.level.org.springframework.web=DEBUG
# logging.level.org.springframework.context.annotation=TRACE

# Maximum time static resources should be cached
#spring.resources.cache.cachecontrol.max-age=12h

#Maximum file/request size
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB