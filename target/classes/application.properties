# this configuration needs to correspond to the Vue.js frontends' vue.config.js devServer.proxy.target configuration!
# otherwise you may experience errors like: Proxy error: Could not proxy request /controller/hello from localhost:8080 to http://localhost:8088... (ECONNREFUSED).

#server.port=8088
# hsqldb/postgresql
database=postgresql
spring.datasource.schema=classpath*:db/${database}/schema.sql
spring.datasource.data=classpath*:db/${database}/data.sql

# postgresql gcloud database init
spring.datasource.username=postgres
spring.datasource.password=postgres
spring.cloud.gcp.sql.database-name=psomocnik
# This value is formatted in the form: [gcp project id]:[region]:[instance-name]
spring.cloud.gcp.sql.instance-connection-name=psomocnik-262113:us-central1:psomocniksql
# So app starts despite "table already exists" errors.
spring.datasource.continue-on-error=true
# Enforces database initialization
spring.datasource.initialization-mode=always
spring.cloud.gcp.project-id=psomocnik-262113


# JPA
spring.jpa.hibernate.ddl-auto=none
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
#spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults=false

# Actuator / Management
management.endpoints.web.base-path=/manage
management.endpoints.web.exposure.include=*
management.contextPath=/_ah

#Maximum file/request size
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB

#Security
pl.psomocnik.security.oauth2.resource.filter-order = 3
signing-key = somesslvalue
resource-ids = psomocnik-resources
client-id = psomocnik-ui
client-secret = secret
